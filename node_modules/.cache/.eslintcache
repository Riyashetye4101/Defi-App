[{"C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\index.js":"1","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\App.js":"2","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\reportWebVitals.js":"3","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Sidenavbar\\Sidebar.js":"4","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todosection\\TodoList.js":"5","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todo-board\\Boards.js":"6","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todo-board\\Cards.js":"7","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todo-board\\AddTodo.js":"8","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todo-board\\AddList.js":"9"},{"size":535,"mtime":1684917503926,"results":"10","hashOfConfig":"11"},{"size":2237,"mtime":1685642299243,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1684917503945,"results":"13","hashOfConfig":"11"},{"size":3257,"mtime":1685691946044,"results":"14","hashOfConfig":"11"},{"size":3906,"mtime":1685693776700,"results":"15","hashOfConfig":"11"},{"size":1359,"mtime":1685693638969,"results":"16","hashOfConfig":"11"},{"size":2448,"mtime":1685693699781,"results":"17","hashOfConfig":"11"},{"size":2224,"mtime":1685693497925,"results":"18","hashOfConfig":"11"},{"size":1438,"mtime":1685693527742,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1j0k5by",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\index.js",[],[],[],"C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\App.js",["51"],[],"\nimport Navbar from './Sidenavbar/Sidebar';\nimport Home from './Todosection/TodoList'\nimport { useState,useEffect } from 'react';\nimport {ethers} from 'ethers';\nimport abi from './contractJson/TodoLists.json';\n \n\nfunction App() {\n  const [state, setState] = useState({provider:null,signer:null,contract:null});\n  const [account,setAccount]=useState('Not connected');\n  const [signer,setSigner]=useState(null);\n \n \n  \n  const [acc,setacc] = useState(null);\n  useEffect(()=>{\n     const template= async()=>{\n          const contractAddress = \"0x0F46eC23f8A3e8496d66E285b744f918Ef28e0c2\";\n          const contractABI = abi.abi;\n\n          // code to connect to metamask\n          // metamask is used for following:-\n          // 1. In order do transactions on goerli test n/w\n          //2. metamask consists of infura api which helps to connect to the blockchain\n        \n          try{\n          const {ethereum}=window;\n             \n          const account= await ethereum.request({\n            method:\"eth_requestAccounts\"\n          });\n           \n      \n          window.ethereum.on(\"accountsChanged\",()=>{\n            window.location.reload();\n          })\n          setAccount(account);\n          const provider = new ethers.providers.Web3Provider(ethereum); // read the blockchain\n         const signer =await provider.getSigner(); // write the blockchain\n          setSigner(signer);\n          console.log(\"signer\",signer);\n          \n          const contract= new ethers.Contract(\n            contractAddress,\n            contractABI,\n            signer\n          );\n          \n          \n          setState({provider,signer,contract});\n          \n          // console.log(\"this a state\",state);\n          // console.log(contract);\n          setacc(signer.getAddress());\n          // console.log(signer.getAddress());\n          \n        }\n        catch(error){\n          alert(error);\n        }\n     }\n     \ntemplate();\n  },[]);\n  \n  return (\n    <div className=\"App\">\n      <div className=\"top_address\" style={{color:\"white\"}}>\n        <center>{account}</center>\n      </div>\n      <div className=\"main-content\">\n      <Navbar/>\n      \n      <Home state={state} acc={acc}/>\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\reportWebVitals.js",[],[],"C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Sidenavbar\\Sidebar.js",["52"],[],"import './style.css';\r\nimport {useState} from 'react';\r\nconst Navbar = ({checkfunc}) => {\r\n    \r\n    \r\n    const [isExpended,setExpended] = useState(true);\r\n    const menuItems = [\r\n        {\r\n            text:\"Home\",\r\n            icon: \"icons/Category.png\"\r\n        },\r\n        {\r\n            text:\"Completed\",\r\n            icon: \"icons/section1.png\"\r\n        },\r\n        {\r\n            text:\"Incomplete\",\r\n            icon: \"icons/section2.png\"\r\n        },\r\n        {\r\n            text:\"Share\",\r\n            icon: \"icons/section31.png\"\r\n        }\r\n    ]\r\n    \r\n    return ( \r\n        <div className={isExpended? \"side-nav-container\":\"side-nav-container side-nav-container-NX\"}>\r\n           <div className=\"nav-upper\">\r\n            <div className=\"nav-heading\">\r\n                {isExpended &&\r\n                <div className=\"nav-brand\">\r\n                    \r\n                    <span><center>N</center></span>\r\n                    <h2>Name</h2>\r\n                </div>}\r\n                <button className={isExpended? \"hamburger hamburger-in\": \"hamburger hamburger-out\"}\r\n                 onClick =  {() => setExpended(!isExpended)}\r\n                >\r\n                    \r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </button>\r\n            </div>\r\n            <div className=\"nav-menu\">\r\n                    {\r\n                        menuItems.map(\r\n                            (item)=>{\r\n                                return(\r\n                                <a href=\"#\" className={isExpended? \"menu-item\": \"menu-item menu-item-NX\"}>\r\n                                     <img src={item.icon} alt=\"\" />\r\n                                     {isExpended &&<p> {item.text}</p>}\r\n                                </a>\r\n                                );\r\n                            }\r\n                        )\r\n                    }\r\n            </div>\r\n           </div>\r\n\r\n           \r\n            {isExpended && <div className=\"nav-footer\">\r\n               <div className=\"w-profile\">\r\n                      \r\n                            <div className=\"box1\">\r\n                                <div className=\"pic\">\r\n                                        <p>N</p>\r\n                                </div>\r\n                                    <div className=\"cash-update\">\r\n                                        <span>$0.90</span>\r\n                                    </div>\r\n                             </div>\r\n                                \r\n                            \r\n                            <div className=\"ad\">\r\n                        <span>Buy $XYZ</span> \r\n                             </div>\r\n                      \r\n                       \r\n               </div>\r\n               <div className=\"footer-content\">\r\n                      <div className=\"glb\">\r\n                        <img src=\"icons/global.png\" alt=\"glb\" />\r\n                      </div>\r\n                      <div className=\"box2\">\r\n                        <img src=\"icons/sym.png\" alt=\"sym\" />\r\n                        <div className=\"circle\"></div>\r\n                      </div>\r\n               </div>\r\n           </div>} \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todosection\\TodoList.js",["53"],[],"import './todo.css';\r\nimport { useState,useEffect } from 'react';\r\n\r\nimport Board from '../Todo-board/Boards';\r\nimport AddList from '../Todo-board/AddList';\r\nconst Home = ({state,acc}) => {\r\n    const [Todos,setTodos] = useState([]);\r\n    const {contract} = state;\r\n    const [visible,setVisible]=useState(false);\r\n    const [updatetodo,setUpdate]=useState([]);\r\n\r\n    function addForm(itemobj){\r\n      \r\n       setVisible(true);\r\n       setUpdate(itemobj);\r\n    }\r\n    \r\n    useEffect(()=>{\r\n       const TodoMessage=async()=>{\r\n          \r\n        try{\r\n          const todos=await contract.getTodos(acc);\r\n        \r\n          \r\n          setTodos(todos);\r\n          console.log(\"this is the todos\",Todos);\r\n        }catch(error){\r\n          console.log(error);\r\n        }\r\n       }   \r\n       \r\n       contract && TodoMessage();\r\n    },[contract]);\r\n    \r\n    \r\n    const editForm=async(event)=>{\r\n      try{\r\n        event.preventDefault();\r\n        const {contract} = state;\r\n\r\n        const listid = updatetodo[0];\r\n        let todotitle = document.querySelector(\"#update-title\").value;\r\n        if(todotitle===\"\"){\r\n          todotitle=updatetodo[1].title;\r\n        }\r\n\r\n        let tododescription = document.querySelector(\"#update-description\").value;\r\n        if(tododescription===\"\"){\r\n          console.log(\"desc\")\r\n          tododescription=updatetodo[1].description;\r\n        }\r\n        \r\n        const transaction = await contract.updateTodo(updatetodo[1].id,listid,todotitle,tododescription);\r\n        alert(\"Wait for while util you get success message\");\r\n        document.body.style.cursor = 'progress';\r\n      await transaction.wait();\r\n      document.body.style.cursor = 'auto';\r\n        alert(\"transaction is successfully added \");\r\n        window.location.reload();\r\n        setVisible(false);\r\n      }catch(error){\r\n        alert(error);\r\n      }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n        \r\n        \r\n\r\n         \r\n            <div className=\"section-nav\" >\r\n             \r\n                      <div className=\"section-heading\">\r\n                              <h2>Section</h2>\r\n                      </div>\r\n                       <div className=\"wallet-data\">\r\n                            <img src=\"icons/Wallet.png\" alt=\"\" />\r\n                            <div className=\"w-content\">0.2$XYZ</div>\r\n                            <div className=\"tier\">\r\n                            <p>Tier 1</p></div>\r\n                       </div>\r\n            \r\n                   \r\n          \r\n          </div>\r\n            <div className=\"main\" >\r\n           \r\n           <div className=\"board-container\">\r\n           {Todos.map((list)=>{\r\n                  \r\n                  return <Board state={state} addForm={addForm} listid={list.id} key={list.id} todos={list[1]} uniqueid={list.id}/>\r\n              })}\r\n\r\n              <AddList state={state}/>\r\n            \r\n           </div>\r\n          {visible && <div className=\"form-drawer\">\r\n                \r\n                 <div className=\"form-head\">\r\n                       <div className=\"arrow-img\">\r\n                          <img src=\"icons/Path.png\" alt=\"arrow\" />\r\n                       </div>\r\n                       <div className=\"form-title\">\r\n                          Edit Todo\r\n                       </div>\r\n                 </div>\r\n                 <div className=\"update-form\">\r\n                         <form onSubmit={(e)=>editForm(e)}>\r\n\r\n                           <input type=\"text\" className=\"\" id=\"update-title\" placeholder={updatetodo[1].title}  />\r\n                           <textarea name=\"\"  id=\"update-description\" placeholder={updatetodo[1].description}></textarea>\r\n                           <button>Save</button>\r\n                         </form>\r\n                 </div>\r\n           </div>}\r\n     \r\n            </div>\r\n            \r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Home;","C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todo-board\\Boards.js",[],[],"C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todo-board\\Cards.js",[],[],"C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todo-board\\AddTodo.js",[],[],"C:\\Users\\Riyas\\OneDrive\\Desktop\\Defi\\todoapp\\src\\Todo-board\\AddList.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":12,"column":10,"nodeType":"56","messageId":"57","endLine":12,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":50,"column":33,"nodeType":"60","endLine":50,"endColumn":107},{"ruleId":"61","severity":1,"message":"62","line":33,"column":7,"nodeType":"63","endLine":33,"endColumn":17,"suggestions":"64"},"no-unused-vars","'signer' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Todos' and 'acc'. Either include them or remove the dependency array.","ArrayExpression",["65"],{"desc":"66","fix":"67"},"Update the dependencies array to be: [Todos, acc, contract]",{"range":"68","text":"69"},[839,849],"[Todos, acc, contract]"]